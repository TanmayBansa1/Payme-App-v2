
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String?   @unique
  password  String?
  name      String?
  number    String     @unique 
  authType  AuthType
  onRampTransactions OnRampTransactions[]
  balance          Balance[]
  p2pTransactions P2PTransaction[] @relation("sender")
  p2pTransactionsReceived P2PTransaction[] @relation("recipient")
}

model Merchant {
  id        String   @id @default(cuid())
  name      String?
  email     String?   @unique
  password  String?
  number    String      @unique
  authType  AuthType
}

enum AuthType {
  Google
  Github
  Phone
}

model OnRampTransactions {
  id        String   @id @default(cuid())
  amount    Int
  token     String @unique
  userId    String
  provider  String
  status    OnRampStatus
  startTime DateTime @default(now())
  endTime   DateTime
  user      User     @relation(fields: [userId], references: [id])
  
}

enum OnRampStatus {
  Processing
  Success
  Failed
}

model Balance {
  id        String   @id @default(cuid())
  userId    String @unique
  amount   Int
  locked    Int
  user      User     @relation(fields: [userId], references: [id])
}
model P2PTransaction {
  id         String   @id @default(uuid())
  senderId   String
  recipientId String
  amount     Float
  status     P2PTransactionStatus
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  sender     User     @relation(name: "sender", fields: [senderId], references: [id])
  recipient  User     @relation(name: "recipient", fields: [recipientId], references: [id])
}

enum P2PTransactionStatus {
  Processing
  Success
  Failed
}
